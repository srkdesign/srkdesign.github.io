---
import type { GetStaticPaths } from "astro";
// Constants
import { SITE_TITLE } from "../../consts";
type PostProps = CollectionEntry<"blog">;

// Content
import { getCollection, type CollectionEntry } from "astro:content";

// Functions
import FormatDate from "../../utils/FormatDate";

// Components
import Layout from "../../layouts/Layout.astro";
import PostLink from "../../components/_PostLink";
import AnimatedLayout from "../../layouts/AnimatedLayout";
import Pagination from "../../components/Pagination.astro";

interface PaginationData {
  data: CollectionEntry<"blog">[];
  url: {
    current: string;
    prev?: string;
    next?: string;
  };
}

// Get all posts
export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const allPosts = await getCollection("blog");
  const isProd = import.meta.env.PROD;
  const filteredPosts = allPosts
    .filter(({ data }: CollectionEntry<"blog">) =>
      isProd ? !data.isDraft : true
    )
    .sort(
      (a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
        b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
    );

  return paginate(filteredPosts, {
    pageSize: 5,
  });
};

const page = Astro.props.page as PaginationData;
if (!page) throw new Error("Pagination data is missing");
---

<Layout
  title={`Блог / ${SITE_TITLE}`}
  description="Блог о веб-дизайне и фронтэнд-разработке: статьи, советы и лучшие практики по UX/UI, адаптивному дизайну, HTML, CSS, JavaScript и SEO. Всё, что нужно для создания эффективных сайтов!"
>
  <!-- <BlogLayout posts={posts} client:only="react" /> -->
  <AnimatedLayout client:only="react">
    <div class="lg:pt-32">
      <div
        class="flex justify-between items-center mb-8 md:mb-16 lg:px-24 px-8 text-5xl lg:text-9xl"
      >
        <h1 class="whitespace-nowrap">Статьи</h1>
        <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
      </div>
      <ul>
        {
          page.data.map((post) => (
            <PostLink
              id={post.id}
              title={post.data.title}
              category={post.data.category}
              date={FormatDate(post.data.pubDate)}
              image={post.data.heroImage}
              client:only="react"
            />
          ))
        }
      </ul>
    </div>
  </AnimatedLayout>
</Layout>
