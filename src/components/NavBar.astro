<header
  class="sticky top-0 z-50 w-full backdrop-blur-sm bg-dark-blue/95 grid grid-cols-subgrid col-span-full py-2"
>
  <a
    href="/"
    class="col-start-1 block size-[72px]"
    id="nav-logo"
    aria-label="Логотип сайта"
  >
    <div id="logo"></div>
  </a>
  <nav
    class="col-start-7 col-span-4 flex py-2 text-sm items-center w-full"
    id="nav"
  >
    <ul
      class="flex flex-row pb-2 overflow-x-scroll md:pb-0 md:overflow-x-hidden w-full justify-between"
      id="nav-list"
    >
      {
        [
          ["Работы", "projects"],
          ["Профиль", "about"],
          ["Статьи", "articles"],
          // ["Обучающие курсы", "courses"],
          ["Заказать сайт", "services"],
        ].map(([title, url]) => (
          <li class="relative whitespace-nowrap">
            <a
              href={`/#${url}`}
              class="block px-5 pt-1 pb-1.5 lowercase rounded-2xl border border-dark-blue/10 transition-all  z-50"
            >
              {title}
            </a>
            <div
              class="absolute inset-0 w-[99%] h-full bg-transparent rounded-3xl border border-pink -z-10"
              id={`${url}-progress`}
            />
          </li>
        ))
      }
    </ul>
  </nav>
</header>

<!-- <script>
  import lottie from "lottie-web";

  const container = document.getElementById("logo")!;
  const logoPath = "/logo-animation.json";
  const playSegment = [0, 75];
  const stopSegment = [76, 119];

  let isAnimationPlaying = false;

  // Initialize the Lottie animation
  const logoAnimation = lottie.loadAnimation({
    container,
    renderer: "svg",
    loop: false,
    autoplay: false,
    path: logoPath,
  });

  // Function to play or pause animation based on the segment
  const controlAnimation = (segment: Array<any>, isPlaying: boolean) => {
    if (isPlaying !== isAnimationPlaying) {
      logoAnimation.playSegments(segment, true);
      isAnimationPlaying = isPlaying;
    }
  };

  // Event listeners
  container.addEventListener("mouseover", () =>
    controlAnimation(playSegment, true)
  );
  container.addEventListener("mouseleave", () =>
    controlAnimation(stopSegment, false)
  );
</script> -->
